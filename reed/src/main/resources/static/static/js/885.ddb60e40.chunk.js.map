{"version":3,"file":"static/js/885.ddb60e40.chunk.js","mappings":"yLAcMA,EAAiD,SAAHC,GAK7C,IAJNC,EAAQD,EAARC,SACAC,EAASF,EAATE,UACAC,EAAIH,EAAJG,KACAC,EAAQJ,EAARI,SAEA,OAAIH,GAEFI,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,OAAO,OAAOC,WAAY,EAAGN,UAAWO,IAAW,YAAaP,GAAWD,SAAA,EAChFS,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAAAV,SAAEA,KACXS,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CACTV,UAAU,sBACVC,KACCA,GACAU,IAAYZ,EAAU,CACrBa,kBAAkB,EAClBC,iBAAiB,EACjBC,oBAAoB,IAGtBZ,SAAUA,EACVa,QAAS,QAMZP,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CACTV,UAAWO,IAAW,OAAQP,GAC9BC,KACCA,GACAU,IAAYZ,EAAU,CACrBa,kBAAkB,EAClBC,iBAAiB,EACjBC,oBAAoB,IAGtBZ,SAAUA,GAGb,EAOAL,EAAkBmB,aAAe,CAChCjB,SAAU,KACVC,eAAWiB,EACXhB,UAAMgB,EACNf,SAAU,OAGX,K,+ECzDMgB,EAAmC,SAAHpB,GAAwC,IAAlCC,EAAQD,EAARC,SAAUC,EAASF,EAATE,UAAWmB,EAAKrB,EAALqB,MAChE,OACCX,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CACLD,MAAOA,EACPE,SAAO,EACPhB,OAAO,KACPiB,YAAa,EACbC,KAAK,OACLvB,UAAWO,IAAW,cAAe,QAAS,OAAQP,GAAWD,SAChEA,GAGJ,EAeAmB,EAAWF,aAAe,CACzBhB,eAAWiB,EACXE,MAAO,WAGR,K,sICpBaK,EAA2C,SAAH1B,GAQ9C,IAPNC,EAAQD,EAARC,SACA0B,EAAS3B,EAAT2B,UACAzB,EAASF,EAATE,UACA0B,EAAG5B,EAAH4B,IACAC,EAAE7B,EAAF6B,GACAC,EAAQ9B,EAAR8B,SACAC,EAAO/B,EAAP+B,QAEA,OACC1B,EAAAA,EAAAA,MAAC2B,EAAAA,EAAU,CACVJ,IAAKA,EACL1B,UAAWO,IAAW,kBAAmB,CAAEwB,OAAQH,GAAY5B,GAC/D,eAAc4B,EAAW,OAAS,KAClC,aAAYH,GAAa1B,EAASA,SAAA,CACjC8B,GACmB,kBAAZA,IACPG,EAAAA,EAAAA,cAAaH,EAAS,CACrB7B,UAAWO,IAAW,kBAAmBsB,EAAQI,MAAMjC,aAExD4B,EACA7B,GAEAS,EAAAA,EAAAA,KAAC0B,EAAAA,GAAO,CAACP,GAAIA,EAAI,aAAYF,EAAU1B,SACrCA,MAKN,EAWAyB,EAAeR,aAAe,CAC7BhB,eAAWiB,EACXQ,eAAWR,EACXS,IAAK,KACLE,UAAU,EACVC,aAASZ,GAmBV,IAAMkB,EAAmC,SAAHC,GAU/B,IATNrC,EAAQqC,EAARrC,SACAsC,EAAID,EAAJC,KACAX,EAAGU,EAAHV,IACAY,EAAOF,EAAPE,QACAC,EAAOH,EAAPG,QACAd,EAASW,EAATX,UACAe,EAAUJ,EAAVI,WACAC,EAAQL,EAARK,SACAZ,EAAOO,EAAPP,QAEMa,EAAsB,WAAZb,GAAwBA,EACxC,OACCrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CACVJ,IAAKA,EACL,aAAYD,EACZkB,MACCd,EACG,CACA,0BACoB,kBAAZA,EAAoB,IAAAe,OAAOf,EAAO,KAAM,QAEhD,KACH9B,UACDI,EAAAA,EAAAA,MAAC2B,EAAAA,EAAU,CAACJ,IAAKY,EAAStC,UAAU,aAAYD,SAAA,CAC9C0C,IACAjC,EAAAA,EAAAA,KAACgB,EAAc,CAACG,GAAG,IAAIF,UAAU,OAAM1B,SACrC0C,IAGFJ,EACEA,EAAKQ,KAAI,SAACC,EAAMC,GAAK,OACrBvC,EAAAA,EAAAA,KAACgB,EAAc,CAEdE,IAAKoB,EAAKpB,KAAOa,EACjBZ,GAAImB,EAAKnB,GACTC,SAAUY,GAAcH,EAAKW,SAAWD,EAAQ,EAChDlB,QAASa,EAAwB3C,SAChC+C,EAAKG,OALDH,EAAKG,MAMM,IAEjBC,EAAAA,SAAAA,IAAanD,GAAU,SAACoD,EAAOJ,GAAK,OAEpCf,EAAAA,EAAAA,cAAamB,EAAO,CAEnBzB,IAAKyB,EAAMlB,MAAMP,KAAOa,EAExBX,SAAUY,GAAczC,EAASiD,SAAWD,EAAQ,EAEpDlB,QAASsB,EAAMlB,MAAMJ,SAAWa,GAC/B,QAKT,EA6BAP,EAAWnB,aAAe,CACzBjB,cAAUkB,EACVS,IAAK,MACLY,QAAS,KACTC,QAAS,KACTd,UAAW,aACXY,UAAMpB,EACNuB,YAAY,EACZC,UAAUjC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAI,CAAC7B,KAAK,mBACrBM,SAASrB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAI,CAAC7B,KAAK,kBAGrB,K,wLCyGA,UA7QmB,WAClB,IAeM8B,EAAS,qBAAAT,OACEU,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,wBAAuB,sBAAAX,OACtCU,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYE,0BAAyB,uBAAAZ,OAClCU,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYG,wBAAuB,uBAAAb,OACnCU,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYI,qBAAoB,uBAAAd,OAChCU,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYK,wBAAuB,uBAAAf,OACnCU,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYM,uBAAsB,uBAAAhB,OAClCU,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYO,sBAAqB,uBAAAjB,OACjCU,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYQ,qBAAoB,KAyDjD,OACC3D,EAAAA,EAAAA,MAAC4D,EAAAA,EAAW,CAACd,MAAOe,EAAAA,GAAAA,UAAAA,QAAAA,OAAAA,KAAiDjE,SAAA,EACpES,EAAAA,EAAAA,KAACyD,EAAAA,GAAS,CAAAlE,UACTS,EAAAA,EAAAA,KAAC0D,EAAAA,GAAa,CAAAnE,UACbS,EAAAA,EAAAA,KAAC2B,EAAAA,EAAU,CACVE,KAAM,CACL,CAAEY,MAAO,YAAatB,GAAI,cAC1B,CAAEsB,MAAO,SAAUtB,GAAI,6BAK3BnB,EAAAA,EAAAA,KAAC2D,EAAAA,EAAI,CAAApE,UACJI,EAAAA,EAAAA,MAAA,OAAKH,UAAU,MAAKD,SAAA,EACnBI,EAAAA,EAAAA,MAAA,OAAKH,UAAU,cAAaD,SAAA,EAC3BS,EAAAA,EAAAA,KAAA,MAAAT,SAAI,YACJI,EAAAA,EAAAA,MAAA,KAAGH,UAAU,OAAMD,SAAA,CAAC,2BACIS,EAAAA,EAAAA,KAAA,QAAAT,SAAM,UAAY,8GAM3CS,EAAAA,EAAAA,KAAA,OAAKR,UAAU,SAAQD,UACtBI,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACgE,GAAG,SAASpE,UAAU,gBAAgBqE,WAAS,EAAAtE,SAAA,EACpDS,EAAAA,EAAAA,KAAC8D,EAAAA,GAAU,CAAAvE,UACVS,EAAAA,EAAAA,KAAC+D,EAAAA,GAAS,CAAAxE,UACTS,EAAAA,EAAAA,KAACgE,EAAAA,GAAS,CAAC9C,IAAI,KAAI3B,SAAC,gBAGtBI,EAAAA,EAAAA,MAACM,EAAAA,GAAQ,CAAAV,SAAA,EACRI,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,qFAEqB,KACvBI,EAAAA,EAAAA,MAACsE,EAAAA,GAAI,CAAC9C,GAAG,4BAA2B5B,SAAA,EACnCS,EAAAA,EAAAA,KAAA,QAAAT,SAAM,YAAc,qBACb,IAAI,eACDS,EAAAA,EAAAA,KAAA,QAAAT,SAAM,WAAa,SAAKS,EAAAA,EAAAA,KAAA,QAAAT,SAAM,WAAa,eAEvDI,EAAAA,EAAAA,MAACN,EAAAA,EAAiB,CAACI,KAvHd,snBAuH2BF,SAAA,EAC/BS,EAAAA,EAAAA,KAAA,KAAGR,UAAU,eAAcD,SAAC,mBAC5BS,EAAAA,EAAAA,KAAA,KAAGR,UAAU,iBAAgBD,SAAC,qBAC9BS,EAAAA,EAAAA,KAAA,KAAGR,UAAU,eAAcD,SAAC,mBAC5BS,EAAAA,EAAAA,KAAA,KAAGR,UAAU,cAAaD,SAAC,kBAC3BS,EAAAA,EAAAA,KAAA,KAAGR,UAAU,uBAAsBD,SAAC,mBACpCS,EAAAA,EAAAA,KAAA,KAAGR,UAAU,oBAAmBD,SAAC,gBACjCS,EAAAA,EAAAA,KAAA,KAAGR,UAAU,qBAAoBD,SAAC,iBAClCS,EAAAA,EAAAA,KAAA,KAAGR,UAAU,YAAWD,SAAC,gBACzBS,EAAAA,EAAAA,KAAA,KAAGR,UAAU,YAAWD,SAAC,gBACzBS,EAAAA,EAAAA,KAAA,KAAGR,UAAU,aAAYD,SAAC,iBAC1BS,EAAAA,EAAAA,KAAA,KAAGR,UAAU,qBAAoBD,SAAC,iBAClCS,EAAAA,EAAAA,KAAA,KAAGR,UAAU,gBAAeD,SAAC,oBAC7BS,EAAAA,EAAAA,KAAA,KAAGR,UAAU,wBAAuBD,SAAC,uBAEtCI,EAAAA,EAAAA,MAACe,EAAAA,EAAU,CAACC,MAAM,OAAMpB,SAAA,EACvBS,EAAAA,EAAAA,KAACkE,EAAAA,GAAY,CAAA3E,SAAC,iDAGdI,EAAAA,EAAAA,MAAA,KAAGH,UAAU,OAAMD,SAAA,CAAC,iWAOVS,EAAAA,EAAAA,KAAA,QAAAT,SAAM,qBAAuB,yBAO3CS,EAAAA,EAAAA,KAAA,OAAKR,UAAU,SAAQD,UACtBI,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACgE,GAAG,cAAcpE,UAAU,gBAAgBqE,WAAS,EAAAtE,SAAA,EACzDS,EAAAA,EAAAA,KAAC8D,EAAAA,GAAU,CAAAvE,UACVS,EAAAA,EAAAA,KAAC+D,EAAAA,GAAS,CAAAxE,UACTS,EAAAA,EAAAA,KAACgE,EAAAA,GAAS,CAAC9C,IAAI,KAAI3B,SAAC,qBAGtBS,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAAAV,UACRI,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,gLAGgD,KAClDS,EAAAA,EAAAA,KAAA,QAAAT,SAAM,UAAkB,+DAO5BI,EAAAA,EAAAA,MAAA,OAAKH,UAAU,SAAQD,SAAA,EACtBI,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACgE,GAAG,OAAOpE,UAAU,gBAAeD,SAAA,EACxCS,EAAAA,EAAAA,KAAC8D,EAAAA,GAAU,CAAAvE,UACVS,EAAAA,EAAAA,KAAC+D,EAAAA,GAAS,CAAAxE,UACTS,EAAAA,EAAAA,KAACgE,EAAAA,GAAS,CAAC9C,IAAI,KAAI3B,SAAC,cAGtBI,EAAAA,EAAAA,MAACM,EAAAA,GAAQ,CAAAV,SAAA,EACRI,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,uFAEyB,KAC3BS,EAAAA,EAAAA,KAAA,KACCmE,KAAK,6DACLC,OAAO,SACPC,IAAI,aAAY9E,SAAC,0BAEb,IAAI,+CAGVI,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACgE,GAAG,YAAYpE,UAAU,0BAAyBD,SAAA,EACvDS,EAAAA,EAAAA,KAAC8D,EAAAA,GAAU,CAAAvE,UACVS,EAAAA,EAAAA,KAAC+D,EAAAA,GAAS,CAAAxE,UACTS,EAAAA,EAAAA,KAACgE,EAAAA,GAAS,CAAAzE,SAAC,mBAGbI,EAAAA,EAAAA,MAACM,EAAAA,GAAQ,CAAAV,SAAA,EACRI,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,SACGS,EAAAA,EAAAA,KAAA,QAAAT,SAAM,UAAY,yGAIxBS,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CACTT,KAAMoD,EACNnD,SAAS,OACTF,UAAU,UAEXQ,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CACTT,KAxLO,4EAyLPC,SAAS,OACTF,UAAU,UAEXQ,EAAAA,EAAAA,KAAA,KAAAT,SAAG,gGAIHS,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CACTT,KA/LO,oOAgMPC,SAAS,OACTF,UAAU,sBAMfG,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACgE,GAAG,MAAMpE,UAAU,0BAAyBD,SAAA,EACjDS,EAAAA,EAAAA,KAAC8D,EAAAA,GAAU,CAAAvE,UACVS,EAAAA,EAAAA,KAAC+D,EAAAA,GAAS,CAAAxE,UACTS,EAAAA,EAAAA,KAACgE,EAAAA,GAAS,CAAAzE,SAAC,aAGbI,EAAAA,EAAAA,MAACM,EAAAA,GAAQ,CAAAV,SAAA,EACRS,EAAAA,EAAAA,KAAA,KAAAT,SAAG,kIAIHS,EAAAA,EAAAA,KAACX,EAAAA,EAAiB,CAACI,KArMjB,uPAqM4BC,SAAS,OAAOF,UAAU,UACxDG,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,qDACiD,KACnDS,EAAAA,EAAAA,KAAA,UAAAT,SAAQ,wDAETS,EAAAA,EAAAA,KAACX,EAAAA,EAAiB,CAACI,KA/Lf,4NA+L4BC,SAAS,gBAG3CC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACgE,GAAG,gBAAgBpE,UAAU,0BAAyBD,SAAA,EAC3DS,EAAAA,EAAAA,KAAC8D,EAAAA,GAAU,CAAAvE,UACVS,EAAAA,EAAAA,KAAC+D,EAAAA,GAAS,CAAAxE,UACTS,EAAAA,EAAAA,KAACgE,EAAAA,GAAS,CAAAzE,SAAC,uBAGbI,EAAAA,EAAAA,MAACM,EAAAA,GAAQ,CAAAV,SAAA,EACRI,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,4DACwD,KAC1DS,EAAAA,EAAAA,KAAA,QAAAT,SAAM,gDAAkD,IAAE,KAC1DS,EAAAA,EAAAA,KAACsE,EAAAA,GAAQ,CAACnD,GAAG,iCAAgC5B,SAAC,4CAI/CS,EAAAA,EAAAA,KAACX,EAAAA,EAAiB,CAACI,KAnMP,8SAmM4BC,SAAS,yBAQzD,C","sources":["common/other/CommonCodePreview.tsx","common/other/CommonDesc.tsx","components/bootstrap/Breadcrumb.tsx","pages/documentation/utilities/ColorsPage.tsx"],"sourcesContent":["import React, { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\n// @ts-ignore\nimport jsxToString from 'jsx-to-string';\nimport classNames from 'classnames';\nimport Card, { CardBody } from '../../components/bootstrap/Card';\nimport PrismCode from '../../components/extras/PrismCode';\n\ninterface ICommonCodePreviewProps {\n\tchildren?: ReactNode;\n\tclassName?: string;\n\tcode?: string;\n\tlanguage?: string;\n}\nconst CommonCodePreview: FC<ICommonCodePreviewProps> = ({\n\tchildren,\n\tclassName,\n\tcode,\n\tlanguage,\n}) => {\n\tif (children) {\n\t\treturn (\n\t\t\t<Card shadow='none' borderSize={1} className={classNames('rounded-2', className)}>\n\t\t\t\t<CardBody>{children}</CardBody>\n\t\t\t\t<PrismCode\n\t\t\t\t\tclassName='my-0 rounded-bottom'\n\t\t\t\t\tcode={\n\t\t\t\t\t\tcode ||\n\t\t\t\t\t\tjsxToString(children, {\n\t\t\t\t\t\t\tfunctionNameOnly: true,\n\t\t\t\t\t\t\tuseFunctionCode: true,\n\t\t\t\t\t\t\tshortBooleanSyntax: true,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\trounded={0}\n\t\t\t\t/>\n\t\t\t</Card>\n\t\t);\n\t}\n\treturn (\n\t\t<PrismCode\n\t\t\tclassName={classNames('my-0', className)}\n\t\t\tcode={\n\t\t\t\tcode ||\n\t\t\t\tjsxToString(children, {\n\t\t\t\t\tfunctionNameOnly: true,\n\t\t\t\t\tuseFunctionCode: true,\n\t\t\t\t\tshortBooleanSyntax: true,\n\t\t\t\t})\n\t\t\t}\n\t\t\tlanguage={language}\n\t\t/>\n\t);\n};\nCommonCodePreview.propTypes = {\n\tchildren: PropTypes.node,\n\tclassName: PropTypes.string,\n\tcode: PropTypes.string,\n\tlanguage: PropTypes.string,\n};\nCommonCodePreview.defaultProps = {\n\tchildren: null,\n\tclassName: undefined,\n\tcode: undefined,\n\tlanguage: 'jsx',\n};\n\nexport default CommonCodePreview;\n","import React, { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Alert from '../../components/bootstrap/Alert';\nimport { TColor } from '../../type/color-type';\n\ninterface ICommonDescProps {\n\tchildren: ReactNode;\n\tclassName?: string;\n\tcolor?: TColor;\n}\nconst CommonDesc: FC<ICommonDescProps> = ({ children, className, color }) => {\n\treturn (\n\t\t<Alert\n\t\t\tcolor={color}\n\t\t\tisLight\n\t\t\tshadow='md'\n\t\t\tborderWidth={0}\n\t\t\ticon='Info'\n\t\t\tclassName={classNames('flex-nowrap', 'w-100', 'mb-0', className)}>\n\t\t\t{children}\n\t\t</Alert>\n\t);\n};\nCommonDesc.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n\tclassName: PropTypes.string,\n\tcolor: PropTypes.oneOf([\n\t\t'primary',\n\t\t'secondary',\n\t\t'success',\n\t\t'info',\n\t\t'warning',\n\t\t'danger',\n\t\t'light',\n\t\t'dark',\n\t]),\n};\nCommonDesc.defaultProps = {\n\tclassName: undefined,\n\tcolor: 'warning',\n};\n\nexport default CommonDesc;\n","import React, {\n\tChildren,\n\tcloneElement,\n\tFC,\n\tJSXElementConstructor,\n\tReactElement,\n\tReactNode,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport TagWrapper from '../TagWrapper';\nimport Icon from '../icon/Icon';\n\ninterface IBreadcrumbItemProps extends Record<string, any> {\n\tchildren: ReactNode;\n\tariaLabel?: string;\n\tclassName?: string;\n\ttag?: string;\n\tto: string;\n\tisActive?: boolean;\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\n}\nexport const BreadcrumbItem: FC<IBreadcrumbItemProps> = ({\n\tchildren,\n\tariaLabel,\n\tclassName,\n\ttag,\n\tto,\n\tisActive,\n\tdivider,\n}) => {\n\treturn (\n\t\t<TagWrapper\n\t\t\ttag={tag}\n\t\t\tclassName={classNames('breadcrumb-item', { active: isActive }, className)}\n\t\t\taria-current={isActive ? 'page' : null}\n\t\t\taria-label={ariaLabel || children}>\n\t\t\t{divider &&\n\t\t\t\ttypeof divider !== 'string' &&\n\t\t\t\tcloneElement(divider, {\n\t\t\t\t\tclassName: classNames('breadcrumb-icon', divider.props.className),\n\t\t\t\t})}\n\t\t\t{isActive ? (\n\t\t\t\tchildren\n\t\t\t) : (\n\t\t\t\t<NavLink to={to} aria-label={ariaLabel}>\n\t\t\t\t\t{children}\n\t\t\t\t</NavLink>\n\t\t\t)}\n\t\t</TagWrapper>\n\t);\n};\nBreadcrumbItem.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n\tariaLabel: PropTypes.string,\n\tclassName: PropTypes.string,\n\ttag: PropTypes.string,\n\tto: PropTypes.string.isRequired,\n\tisActive: PropTypes.bool,\n\t// @ts-ignore\n\tdivider: PropTypes.node,\n};\nBreadcrumbItem.defaultProps = {\n\tclassName: undefined,\n\tariaLabel: undefined,\n\ttag: 'li',\n\tisActive: false,\n\tdivider: undefined,\n};\n\n// TODO:: children or list req\ninterface IBreadcrumbProps extends Record<string, any> {\n\tchildren?: ReactElement<IBreadcrumbItemProps> | ReactElement<IBreadcrumbItemProps>[];\n\tlist?: {\n\t\ttitle: string;\n\t\tto: string;\n\t\ttag?: 'div' | 'li';\n\t}[];\n\ttag?: 'nav' | 'div' | 'section';\n\tlistTag?: 'div' | 'ol' | 'ul';\n\titemTag?: 'div' | 'li';\n\tariaLabel?: string | null;\n\tautoActive?: boolean;\n\tisToHome?: ReactNode;\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\n}\nconst Breadcrumb: FC<IBreadcrumbProps> = ({\n\tchildren,\n\tlist,\n\ttag,\n\tlistTag,\n\titemTag,\n\tariaLabel,\n\tautoActive,\n\tisToHome,\n\tdivider,\n}) => {\n\tconst DIVIDER = divider !== 'string' && divider;\n\treturn (\n\t\t<TagWrapper\n\t\t\ttag={tag}\n\t\t\taria-label={ariaLabel}\n\t\t\tstyle={\n\t\t\t\tdivider\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t'--bs-breadcrumb-divider':\n\t\t\t\t\t\t\t\ttypeof divider === 'string' ? `'${divider}'` : 'none',\n\t\t\t\t\t  }\n\t\t\t\t\t: null\n\t\t\t}>\n\t\t\t<TagWrapper tag={listTag} className='breadcrumb'>\n\t\t\t\t{isToHome && (\n\t\t\t\t\t<BreadcrumbItem to='/' ariaLabel='Home'>\n\t\t\t\t\t\t{isToHome}\n\t\t\t\t\t</BreadcrumbItem>\n\t\t\t\t)}\n\t\t\t\t{list\n\t\t\t\t\t? list.map((item, index) => (\n\t\t\t\t\t\t\t<BreadcrumbItem\n\t\t\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\t\t\ttag={item.tag || itemTag}\n\t\t\t\t\t\t\t\tto={item.to}\n\t\t\t\t\t\t\t\tisActive={autoActive && list.length === index + 1}\n\t\t\t\t\t\t\t\tdivider={DIVIDER as ReactElement}>\n\t\t\t\t\t\t\t\t{item.title}\n\t\t\t\t\t\t\t</BreadcrumbItem>\n\t\t\t\t\t  ))\n\t\t\t\t\t: Children.map(children, (child, index) =>\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tcloneElement(child, {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\ttag: child.props.tag || itemTag,\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tisActive: autoActive && children.length === index + 1,\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tdivider: child.props.divider || DIVIDER,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t  )}\n\t\t\t</TagWrapper>\n\t\t</TagWrapper>\n\t);\n};\nBreadcrumb.propTypes = {\n\t// @ts-ignore\n\tchildren: PropTypes.node,\n\ttag: PropTypes.oneOf(['nav', 'div', 'section']),\n\tlistTag: PropTypes.oneOf(['div', 'ol', 'ul']),\n\titemTag: PropTypes.oneOf(['div', 'li']),\n\tariaLabel: PropTypes.string,\n\t// @ts-ignore\n\tlist: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\ttitle: PropTypes.string.isRequired,\n\t\t\tto: PropTypes.string.isRequired,\n\t\t}),\n\t),\n\t/**\n\t * The last element is automatically activated\n\t */\n\tautoActive: PropTypes.bool,\n\t/**\n\t * Icon component or string\n\t */\n\tisToHome: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t/**\n\t * Icon component or string\n\t */\n\t// @ts-ignore\n\tdivider: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n};\nBreadcrumb.defaultProps = {\n\tchildren: undefined,\n\ttag: 'nav',\n\tlistTag: 'ol',\n\titemTag: 'li',\n\tariaLabel: 'breadcrumb',\n\tlist: undefined,\n\tautoActive: true,\n\tisToHome: <Icon icon='HolidayVillage' />,\n\tdivider: <Icon icon='ChevronRight' />,\n};\n\nexport default Breadcrumb;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\nimport SubHeader, { SubHeaderLeft } from '../../../layout/SubHeader/SubHeader';\nimport Breadcrumb from '../../../components/bootstrap/Breadcrumb';\nimport Page from '../../../layout/Page/Page';\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardTitle,\n} from '../../../components/bootstrap/Card';\nimport CommonCodePreview from '../../../common/other/CommonCodePreview';\nimport CommonDesc from '../../../common/other/CommonDesc';\nimport { AlertHeading } from '../../../components/bootstrap/Alert';\nimport PrismCode from '../../../components/extras/PrismCode';\nimport { componentPagesMenu } from '../../../menu';\n\nconst ColorsPage = () => {\n\tconst COLORS = `\n<p className='text-primary'>.text-primary</p>\n<p className='text-secondary'>.text-secondary</p>\n<p className='text-success'>.text-success</p>\n<p className='text-danger'>.text-danger</p>\n<p className='text-warning bg-dark'>.text-warning</p>\n<p className='text-info bg-dark'>.text-info</p>\n<p className='text-light bg-dark'>.text-light</p>\n<p className='text-dark'>.text-dark</p>\n<p className='text-body'>.text-body</p>\n<p className='text-muted'>.text-muted</p>\n<p className='text-white bg-dark'>.text-white</p>\n<p className='text-black-50'>.text-black-50</p>\n<p className='text-white-50 bg-dark'>.text-white-50</p>`;\n\n\tconst VARIABLES = `\n$primary:       ${process.env.REACT_APP_PRIMARY_COLOR};\n$secondary:\t\t${process.env.REACT_APP_SECONDARY_COLOR};\n$success:       ${process.env.REACT_APP_SUCCESS_COLOR};\n$info:          ${process.env.REACT_APP_INFO_COLOR};\n$warning:       ${process.env.REACT_APP_WARNING_COLOR};\n$danger:        ${process.env.REACT_APP_DANGER_COLOR};\n$light:         ${process.env.REACT_APP_LIGHT_COLOR};\n$dark:          ${process.env.REACT_APP_DARK_COLOR};`;\n\tconst VARIABLES_2 = `\n$gradient: linear-gradient(180deg, rgba($white, .15), rgba($white, 0));`;\n\tconst VARIABLES_3 = `\n$white:    #fff;\n$gray-100: #f8f9fa;\n$gray-200: #e9ecef;\n$gray-300: #dee2e6;\n$gray-400: #ced4da;\n$gray-500: #adb5bd;\n$gray-600: #6c757d;\n$gray-700: #495057;\n$gray-800: #343a40;\n$gray-900: #212529;\n$black:    #000;`;\n\n\tconst MAP = `\n$theme-colors: (\n\t\"primary\":    $primary,\n  \t\"secondary\":  $secondary,\n  \t\"success\":    $success,\n  \t\"info\":       $info,\n  \t\"warning\":    $warning,\n  \t\"danger\":     $danger,\n  \t\"light\":      $light,\n  \t\"dark\":       $dark\n);`;\n\tconst MAP_2 = `\n$grays: (\n\t\"100\": $gray-100,\n  \t\"200\": $gray-200,\n\t\"300\": $gray-300,\n  \t\"400\": $gray-400,\n  \t\"500\": $gray-500,\n  \t\"600\": $gray-600,\n  \t\"700\": $gray-700,\n  \t\"800\": $gray-800,\n  \t\"900\": $gray-900\n);`;\n\n\tconst UTILITIES_API = `\n\"color\": (\n\tproperty: color,\n\tclass: text,\n\tvalues: map-merge(\n\t\t$theme-colors,\n\t\t(\n\t\t\t\"white\": $white,\n\t\t\t\"body\": $body-color,\n\t\t\t\"muted\": $text-muted,\n\t\t\t\"black-50\": rgba($black, .5),\n\t\t\t\"white-50\": rgba($white, .5),\n\t\t\t\"reset\": inherit,\n        )\n    )\n),`;\n\n\treturn (\n\t\t<PageWrapper title={componentPagesMenu.utilities.subMenu.colors.text}>\n\t\t\t<SubHeader>\n\t\t\t\t<SubHeaderLeft>\n\t\t\t\t\t<Breadcrumb\n\t\t\t\t\t\tlist={[\n\t\t\t\t\t\t\t{ title: 'Utilities', to: '/utilities' },\n\t\t\t\t\t\t\t{ title: 'Colors', to: '/utilities/colors' },\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</SubHeaderLeft>\n\t\t\t</SubHeader>\n\t\t\t<Page>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-12 my-4'>\n\t\t\t\t\t\t<h1>Colors</h1>\n\t\t\t\t\t\t<p className='lead'>\n\t\t\t\t\t\t\tConvey meaning through <code>color</code> with a handful of color\n\t\t\t\t\t\t\tutility classes. Includes support for styling links with hover states,\n\t\t\t\t\t\t\ttoo.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='col-12'>\n\t\t\t\t\t\t<Card id='colors' className='scroll-margin' isCompact>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel>\n\t\t\t\t\t\t\t\t\t<CardTitle tag='h3'>Colors</CardTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tColorize text with color utilities. If you want to colorize\n\t\t\t\t\t\t\t\t\tlinks, you can use the{' '}\n\t\t\t\t\t\t\t\t\t<Link to='../helpers/colored-links/'>\n\t\t\t\t\t\t\t\t\t\t<code>.link-*</code> helper classes\n\t\t\t\t\t\t\t\t\t</Link>{' '}\n\t\t\t\t\t\t\t\t\twhich have <code>:hover</code> and <code>:focus</code> states.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<CommonCodePreview code={COLORS}>\n\t\t\t\t\t\t\t\t\t<p className='text-primary'>.text-primary</p>\n\t\t\t\t\t\t\t\t\t<p className='text-secondary'>.text-secondary</p>\n\t\t\t\t\t\t\t\t\t<p className='text-success'>.text-success</p>\n\t\t\t\t\t\t\t\t\t<p className='text-danger'>.text-danger</p>\n\t\t\t\t\t\t\t\t\t<p className='text-warning bg-dark'>.text-warning</p>\n\t\t\t\t\t\t\t\t\t<p className='text-info bg-dark'>.text-info</p>\n\t\t\t\t\t\t\t\t\t<p className='text-light bg-dark'>.text-light</p>\n\t\t\t\t\t\t\t\t\t<p className='text-dark'>.text-dark</p>\n\t\t\t\t\t\t\t\t\t<p className='text-body'>.text-body</p>\n\t\t\t\t\t\t\t\t\t<p className='text-muted'>.text-muted</p>\n\t\t\t\t\t\t\t\t\t<p className='text-white bg-dark'>.text-white</p>\n\t\t\t\t\t\t\t\t\t<p className='text-black-50'>.text-black-50</p>\n\t\t\t\t\t\t\t\t\t<p className='text-white-50 bg-dark'>.text-white-50</p>\n\t\t\t\t\t\t\t\t</CommonCodePreview>\n\t\t\t\t\t\t\t\t<CommonDesc color='info'>\n\t\t\t\t\t\t\t\t\t<AlertHeading>\n\t\t\t\t\t\t\t\t\t\tConveying meaning to assistive technologies\n\t\t\t\t\t\t\t\t\t</AlertHeading>\n\t\t\t\t\t\t\t\t\t<p className='mb-0'>\n\t\t\t\t\t\t\t\t\t\tUsing color to add meaning only provides a visual\n\t\t\t\t\t\t\t\t\t\tindication, which will not be conveyed to users of assistive\n\t\t\t\t\t\t\t\t\t\ttechnologies – such as screen readers. Ensure that\n\t\t\t\t\t\t\t\t\t\tinformation denoted by the color is either obvious from the\n\t\t\t\t\t\t\t\t\t\tcontent itself (e.g. the visible text), or is included\n\t\t\t\t\t\t\t\t\t\tthrough alternative means, such as additional text hidden\n\t\t\t\t\t\t\t\t\t\twith the <code>.visually-hidden</code> class.\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</CommonDesc>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='col-12'>\n\t\t\t\t\t\t<Card id='specificity' className='scroll-margin' isCompact>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel>\n\t\t\t\t\t\t\t\t\t<CardTitle tag='h3'>Specificity</CardTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tSometimes contextual classes cannot be applied due to the\n\t\t\t\t\t\t\t\t\tspecificity of another selector. In some cases, a sufficient\n\t\t\t\t\t\t\t\t\tworkaround is to wrap your element’s content in a{' '}\n\t\t\t\t\t\t\t\t\t<code>&lt;div&gt;</code> or more semantic element with the\n\t\t\t\t\t\t\t\t\tdesired class.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='col-12'>\n\t\t\t\t\t\t<Card id='sass' className='scroll-margin'>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel>\n\t\t\t\t\t\t\t\t\t<CardTitle tag='h3'>Sass</CardTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tIn addition to the following Sass functionality, consider\n\t\t\t\t\t\t\t\t\treading about our included{' '}\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref='https://getbootstrap.com/docs/5.0/customize/css-variables/'\n\t\t\t\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\t\t\t\trel='noreferrer'>\n\t\t\t\t\t\t\t\t\t\tCSS custom properties\n\t\t\t\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\t\t\t\t(aka CSS variables) for colors and more.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<Card id='variables' className='scroll-margin rounded-2'>\n\t\t\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t\t\t<CardLabel>\n\t\t\t\t\t\t\t\t\t\t\t<CardTitle>Variables</CardTitle>\n\t\t\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\tMost <code>color</code> utilities are generated by our\n\t\t\t\t\t\t\t\t\t\t\ttheme colors, reassigned from our generic color palette\n\t\t\t\t\t\t\t\t\t\t\tvariables.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<PrismCode\n\t\t\t\t\t\t\t\t\t\t\tcode={VARIABLES}\n\t\t\t\t\t\t\t\t\t\t\tlanguage='scss'\n\t\t\t\t\t\t\t\t\t\t\tclassName='mb-4'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<PrismCode\n\t\t\t\t\t\t\t\t\t\t\tcode={VARIABLES_2}\n\t\t\t\t\t\t\t\t\t\t\tlanguage='scss'\n\t\t\t\t\t\t\t\t\t\t\tclassName='mb-4'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\tGrayscale colors are also available, but only a subset\n\t\t\t\t\t\t\t\t\t\t\tare used to generate any utilities.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<PrismCode\n\t\t\t\t\t\t\t\t\t\t\tcode={VARIABLES_3}\n\t\t\t\t\t\t\t\t\t\t\tlanguage='scss'\n\t\t\t\t\t\t\t\t\t\t\tclassName='mb-0'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Card id='map' className='scroll-margin rounded-2'>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel>\n\t\t\t\t\t\t\t\t\t<CardTitle>Map</CardTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tTheme colors are then put into a Sass map so we can loop over\n\t\t\t\t\t\t\t\t\tthem to generate our utilities, component modifiers, and more.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<CommonCodePreview code={MAP} language='scss' className='mb-4' />\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tGrayscale colors are also available as a Sass map.{' '}\n\t\t\t\t\t\t\t\t\t<strong>This map is not used to generate any utilities.</strong>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<CommonCodePreview code={MAP_2} language='scss' />\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Card id='utilities-api' className='scroll-margin rounded-2'>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel>\n\t\t\t\t\t\t\t\t\t<CardTitle>Utilities API</CardTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tBackground utilities are declared in our utilities API in{' '}\n\t\t\t\t\t\t\t\t\t<code>node_modules/bootstrap/scss/_utilities.scss</code>.{' '}\n\t\t\t\t\t\t\t\t\t<HashLink to='../utilities/api#using-the-api'>\n\t\t\t\t\t\t\t\t\t\tLearn how to use the utilities API.\n\t\t\t\t\t\t\t\t\t</HashLink>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<CommonCodePreview code={UTILITIES_API} language='scss' />\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Page>\n\t\t</PageWrapper>\n\t);\n};\n\nexport default ColorsPage;\n"],"names":["CommonCodePreview","_ref","children","className","code","language","_jsxs","Card","shadow","borderSize","classNames","_jsx","CardBody","PrismCode","jsxToString","functionNameOnly","useFunctionCode","shortBooleanSyntax","rounded","defaultProps","undefined","CommonDesc","color","Alert","isLight","borderWidth","icon","BreadcrumbItem","ariaLabel","tag","to","isActive","divider","TagWrapper","active","cloneElement","props","NavLink","Breadcrumb","_ref2","list","listTag","itemTag","autoActive","isToHome","DIVIDER","style","concat","map","item","index","length","title","Children","child","Icon","VARIABLES","process","REACT_APP_PRIMARY_COLOR","REACT_APP_SECONDARY_COLOR","REACT_APP_SUCCESS_COLOR","REACT_APP_INFO_COLOR","REACT_APP_WARNING_COLOR","REACT_APP_DANGER_COLOR","REACT_APP_LIGHT_COLOR","REACT_APP_DARK_COLOR","PageWrapper","componentPagesMenu","SubHeader","SubHeaderLeft","Page","id","isCompact","CardHeader","CardLabel","CardTitle","Link","AlertHeading","href","target","rel","HashLink"],"sourceRoot":""}